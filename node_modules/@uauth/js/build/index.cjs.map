{"version":3,"file":"index.cjs","sources":["../src/errors/createError.ts","../src/errors/errors.ts","../src/util/encoding/stringFromBuffer.ts","../src/util/encoding/textEncoder.ts","../src/util/getWindow.ts","../src/util/encoding/toBase64.ts","../src/util/encoding/toUrlEncodedBase64.ts","../src/util/crypto/getCrypto.ts","../src/util/crypto/getRandomBytes.ts","../src/util/crypto/getCryptoSubtle.ts","../src/util/crypto/sha256.ts","../src/util/crypto/createCodeChallengeAndVerifier.ts","../src/util/encoding/fromBase64.ts","../src/util/encoding/textDecoder.ts","../src/util/uniqueElementsFromArray.ts","../src/util/getSortedScope.ts","../src/util/objectFromURLSearchParams.ts","../src/util/objectToKey.ts","../src/util/index.ts","../src/util/crypto/verifyIdToken.ts","../src/util/encoding/decodeState.ts","../src/util/encoding/encodeState.ts","../src/util/objectFromEntries.ts","../src/util/retry.ts","../src/api/ApiError.ts","../src/api/Api.ts","../src/ClientStore.ts","../src/store/StorageStore.ts","../src/Client.ts"],"sourcesContent":["export default function createError(name: string, message: string) {\n  return class extends Error {\n    name = name\n    constructor() {\n      super(message)\n    }\n  }\n}\n","import createError from './createError'\n\nexport const PopupTimeoutError = createError(\n  'PopupTimeoutError',\n  'The popup has timed out.',\n)\n\nexport const PopupClosedError = createError(\n  'PopupClosedError',\n  'The popup was closed.',\n)\n","const stringFromBuffer = (buf: ArrayBuffer): string =>\n  String.fromCharCode.apply(null, Array.from(new Uint8Array(buf)))\n\nexport default stringFromBuffer\n","const textEncoder = new TextEncoder()\n\nexport default textEncoder\n","import window from 'global'\n\nconst getWindow: () => Window & typeof globalThis = () => window\n\nexport default getWindow\n","import getWindow from '../getWindow'\n\nconst toBase64 = (str: string) => getWindow().btoa(str)\n\nexport default toBase64\n","import toBase64 from './toBase64'\n\nconst toUrlEncodedBase64 = (str: string) => {\n  return toBase64(str)\n    .replace(/=+$/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n}\n\nexport default toUrlEncodedBase64\n","import getWindow from '../getWindow'\n\n//ie 11.x uses msCrypto\nconst getCrypto = () =>\n  (getWindow().crypto ?? (getWindow() as any).msCrypto) as Crypto\n\nexport default getCrypto\n","import getCrypto from './getCrypto'\n\nconst getRandomBytes = (length: number): Uint8Array =>\n  getCrypto().getRandomValues(new Uint8Array(length))\n\nexport default getRandomBytes\n","import getCrypto from './getCrypto'\n\n//safari 10.x uses webkitSubtle\nconst getCryptoSubtle = () =>\n  getCrypto().subtle ?? (getCrypto() as any).webkitSubtle\n\nexport default getCryptoSubtle\n","import getWindow from '../getWindow'\nimport getCryptoSubtle from './getCryptoSubtle'\n\nconst sha256 = async (buf: ArrayBuffer): Promise<ArrayBuffer> => {\n  const digestOp: any = getCryptoSubtle().digest({name: 'SHA-256'}, buf)\n\n  // This is for legacy IE Hashing\n  if ((getWindow() as any).msCrypto) {\n    return new Promise((res, rej) => {\n      digestOp.oncomplete = (e: any) => res(e.target.result)\n      digestOp.onerror = (e: ErrorEvent) => rej(e.error)\n      digestOp.onabort = () => rej('The digest operation was aborted')\n    })\n  }\n\n  return await digestOp\n}\n\nexport default sha256\n","import type {CodeChallengeMethod} from '../../types'\nimport stringFromBuffer from '../encoding/stringFromBuffer'\nimport textEncoder from '../encoding/textEncoder'\nimport toUrlEncodedBase64 from '../encoding/toUrlEncodedBase64'\nimport getRandomBytes from './getRandomBytes'\nimport sha256 from './sha256'\n\nconst pkceMask =\n  '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_~.'\n\nconst createCodeVerifier = (length: number) => {\n  return Array.from(getRandomBytes(length))\n    .map(v => pkceMask[v % pkceMask.length])\n    .join('')\n}\n\nconst createCodeChallengeAndVerifier = async (\n  length = 43,\n  method: CodeChallengeMethod = 'S256',\n): Promise<{verifier: string; challenge: string}> => {\n  const verifier = createCodeVerifier(length)\n\n  switch (method) {\n    case 'plain':\n      return {verifier, challenge: verifier}\n    case 'S256':\n      return {\n        verifier,\n        challenge: toUrlEncodedBase64(\n          stringFromBuffer(await sha256(textEncoder.encode(verifier).buffer)),\n        ),\n      }\n    default:\n      throw new Error('bad challenge method')\n  }\n}\n\nexport default createCodeChallengeAndVerifier\n","import getWindow from '../getWindow'\n\nconst fromBase64 = (str: string): string => getWindow().atob(str)\n\nexport default fromBase64\n","const textDecoder = new TextDecoder()\n\nexport default textDecoder\n","export default function uniqueElementsFromArray<T>(arr: T[]): T[] {\n  return Array.from(new Set(arr))\n}\n","import uniqueElementsFromArray from './uniqueElementsFromArray'\n\nconst getSortedScope = (scope: string) =>\n  uniqueElementsFromArray(scope.trim().split(/\\s+/)).sort().join(' ')\n\nexport default getSortedScope\n","export default function objectFromURLSearchParams(\n  params: URLSearchParams,\n): Record<string, string | string[]> {\n  const obj = {}\n\n  params.forEach((_, key) => {\n    if (params.getAll(key).length > 1) {\n      obj[key] = params.getAll(key)\n    } else {\n      obj[key] = params.get(key)\n    }\n  })\n\n  return obj\n}\n","export default function objectToKey(object: Record<PropertyKey, any>): string {\n  const params = new URLSearchParams(\n    [...Object.entries(object)].filter(([k, v]) => k != null && v != null),\n  )\n  params.sort()\n  return params.toString()\n}\n","import createCodeChallengeAndVerifier from './crypto/createCodeChallengeAndVerifier'\nimport getCrypto from './crypto/getCrypto'\nimport getCryptoSubtle from './crypto/getCryptoSubtle'\nimport getRandomBytes from './crypto/getRandomBytes'\nimport sha256 from './crypto/sha256'\nimport verifyIdToken from './crypto/verifyIdToken'\nimport decodeState from './encoding/decodeState'\nimport encodeState from './encoding/encodeState'\nimport fromBase64 from './encoding/fromBase64'\nimport stringFromBuffer from './encoding/stringFromBuffer'\nimport textDecoder from './encoding/textDecoder'\nimport textEncoder from './encoding/textEncoder'\nimport toBase64 from './encoding/toBase64'\nimport toUrlEncodedBase64 from './encoding/toUrlEncodedBase64'\n\nconst crypto = {\n  createCodeChallengeAndVerifier,\n  getCrypto,\n  getCryptoSubtle,\n  getRandomBytes,\n  sha256,\n  verifyIdToken,\n}\n\nconst encoding = {\n  decodeState,\n  encodeState,\n  fromBase64,\n  textDecoder,\n  textEncoder,\n  toBase64,\n  toUrlEncodedBase64,\n  stringFromBuffer,\n}\n\nexport {default as getSortedScope} from './getSortedScope'\nexport {default as getWindow} from './getWindow'\nexport {default as objectFromEntries} from './objectFromEntries'\nexport {default as objectFromURLSearchParams} from './objectFromURLSearchParams'\nexport {default as objectToKey} from './objectToKey'\nexport {default as retry} from './retry'\nexport {default as uniqueElementsFromArray} from './uniqueElementsFromArray'\nexport {crypto, encoding}\n","import {IdToken} from '@uauth/common'\nimport {jwtVerify, createRemoteJWKSet} from 'jose'\n\nconst verifyIdToken = async (\n  jwks_uri: string,\n  id_token: string,\n  nonce: string,\n  client_id: string,\n) => {\n  const {payload} = await jwtVerify(\n    id_token,\n    createRemoteJWKSet(new URL(jwks_uri)),\n    {audience: client_id},\n  )\n\n  const idToken: IdToken = payload as any\n\n  idToken.__raw = id_token\n\n  if (nonce !== idToken.nonce) {\n    throw new Error(\"nonces don't match\")\n  }\n\n  return idToken\n}\n\nexport default verifyIdToken\n","import fromBase64 from './fromBase64'\n\nconst decodeState = <T>(state: string): T => {\n  const [, v, ...b] = state.split('.')\n\n  if (b.length > 0) {\n    throw new Error('failed to decode state')\n  }\n\n  return v?.length > 0\n    ? JSON.parse(decodeURIComponent(/* unescape */ fromBase64(v)))\n    : undefined\n}\n\nexport default decodeState\n","import getRandomBytes from '../crypto/getRandomBytes'\nimport stringFromBuffer from './stringFromBuffer'\nimport toUrlEncodedBase64 from './toUrlEncodedBase64'\n\nconst encodeState = <T>(state: T): string =>\n  `${toUrlEncodedBase64(stringFromBuffer(getRandomBytes(32)))}.${\n    state == null\n      ? ''\n      : toUrlEncodedBase64(\n          /* escape */ encodeURIComponent(JSON.stringify(state)),\n        )\n  }`\n\nexport default encodeState\n","export default function objectFromEntries<T = any>(\n  entries: Iterable<readonly [PropertyKey, T]>,\n): Record<PropertyKey, T> {\n  const object: Record<PropertyKey, T> = {}\n  for (const [k, v] of entries) {\n    object[k] = v\n  }\n  return object\n}\n","function retry<T>(\n  fn: () => Promise<T>,\n  retries = 4,\n  timeout = 250,\n  factor = 2,\n  err = null,\n): Promise<T> {\n  if (retries <= 0) {\n    return Promise.reject(err)\n  }\n\n  return fn().catch(async err => {\n    await new Promise(r => setTimeout(r, timeout))\n    return retry(fn, retries - 1, timeout * factor, factor, err)\n  })\n}\n\nexport default retry\n","import {ErrorResponse} from './types'\n\nexport default class ApiError extends Error {\n  constructor(\n    public code: string,\n    public description: string,\n    public uri?: string,\n  ) {\n    super(`${code}: ${description}${uri ? `\\nSee more at ${uri}.` : ''}`)\n  }\n\n  static fromResponse(response: ErrorResponse) {\n    return new ApiError(\n      response.error,\n      response.error_description,\n      response.error_uri,\n    )\n  }\n}\n","import {PopupClosedError, PopupTimeoutError} from '../errors/errors'\nimport {UserInfo} from '../types'\nimport {objectFromURLSearchParams} from '../util'\nimport toBase64 from '../util/encoding/toBase64'\nimport ApiError from './ApiError'\nimport {\n  ApiOptions,\n  AuthorizeRequest,\n  AuthorizeResponse,\n  AuthorizeWithDeviceRequest,\n  AuthorizeWithDeviceResponse,\n  BaseRequest,\n  IntrospectRequest,\n  IntrospectResponse,\n  JWKSRequest,\n  JWKSResponse,\n  LogoutRequest,\n  PopupConfig,\n  RevokeRequest,\n  TokenRequest,\n  TokenResponse,\n  TokenWithAuthorizationCodeRequest,\n  TokenWithClientCredentialsRequest,\n  TokenWithDeviceCodeRequest,\n  TokenWithPasswordRequest,\n  TokenWithRefreshTokenRequest,\n  TokenWithSAMLRequest,\n  UserInfoRequest,\n} from './types'\n\nexport default class Api {\n  static Error = ApiError\n\n  constructor(public options: ApiOptions) {}\n\n  buildAuthorizeUrl(request: AuthorizeRequest): string {\n    return this._buildUrl(request)\n  }\n\n  buildLogoutUrl(request: LogoutRequest): string {\n    return this._buildUrl(request)\n  }\n\n  parseAuthorizeResponseFromFragment(url: string): AuthorizeResponse {\n    return this._validateResponse(\n      objectFromURLSearchParams(\n        new URLSearchParams(new URL(url).hash.substring(1)),\n      ),\n    )\n  }\n\n  parseAuthorizeResponseFromQuery(url: string): AuthorizeResponse {\n    return this._validateResponse(\n      objectFromURLSearchParams(new URL(url).searchParams),\n    )\n  }\n\n  async authorizeWithPopup(\n    request: AuthorizeRequest,\n    config: PopupConfig = {},\n  ): Promise<AuthorizeResponse> {\n    if (!window) {\n      throw new Error('no window in options')\n    }\n\n    const url = this.buildAuthorizeUrl(request)\n\n    let popup: Window | undefined | null = config.popup\n    const timeout: number = config.timeout ?? 3600000\n\n    if (!popup) {\n      popup = window.open(\n        url,\n        'uauth:authorize:popup',\n        `left=${window.screenX + (window.innerWidth - 400) / 2},top=${\n          window.screenY + (window.innerHeight - 600) / 2\n        },width=400,height=600,resizable,scrollbars=yes,status=1`,\n      )\n\n      if (!popup) {\n        throw new Error('popup failed to be constructed')\n      }\n    } else {\n      popup.location.href = url\n    }\n\n    let recievedMessage = false\n    const response: AuthorizeResponse = await new Promise((resolve, reject) => {\n      const timeoutId = setTimeout(() => {\n        if (!recievedMessage) {\n          clearInterval(intervalId)\n          popup!.close()\n          reject(new PopupTimeoutError())\n        }\n      }, timeout)\n\n      const intervalId = setInterval(() => {\n        // Check if popup is closed\n        if (!recievedMessage && popup?.closed) {\n          clearInterval(intervalId)\n          clearTimeout(timeoutId)\n          reject(new PopupClosedError())\n        }\n\n        // Check if popup doesn't violate the \"Same-Origin\" policy and has a valid url\n        let href: string\n        let url: URL\n        let redirectUrl: URL\n        try {\n          href = popup!.location.href\n          url = new URL(href)\n          redirectUrl = new URL(request.redirect_uri)\n        } catch (error) {\n          return // Exit if not\n        }\n\n        // Check to see that the redirect was correct\n        url.hash = ''\n        if (url.href === redirectUrl.href) {\n          recievedMessage = true\n\n          clearInterval(intervalId)\n          clearTimeout(timeoutId)\n          popup!.close()\n\n          try {\n            resolve(this.parseAuthorizeResponseFromFragment(href))\n          } catch (error) {\n            reject(error)\n          }\n        }\n      }, 10)\n    })\n\n    return response\n  }\n\n  async authorizeWithDevice(\n    request: AuthorizeWithDeviceRequest,\n  ): Promise<AuthorizeWithDeviceResponse> {\n    return {} as any\n  }\n\n  async getToken(request: TokenRequest): Promise<TokenResponse> {\n    const [input, init] = this._buildRequest(request, {method: 'POST'})\n    return this._fetchJSON(input, init)\n  }\n\n  introspect(request: IntrospectRequest): Promise<IntrospectResponse> {\n    const [input, init] = this._buildRequest(request, {method: 'POST'})\n    return this._fetchJSON(input, init)\n  }\n\n  async revoke(request: RevokeRequest): Promise<void> {\n    const [input, init] = this._buildRequest(request, {method: 'POST'})\n    await this._fetchJSON(input, init)\n  }\n\n  userinfo(request: UserInfoRequest): Promise<UserInfo> {\n    const [input, init] = this._buildRequest(request, {\n      method: 'GET',\n      headers: {Authorization: `Basic ${request.access_token}`},\n    })\n    return this._fetchJSON(input, init)\n  }\n\n  jwks(request: JWKSRequest): Promise<JWKSResponse> {\n    const [input, init] = this._buildRequest(request, {method: 'GET'})\n    return this._fetchJSON(input, init)\n  }\n\n  getTokenWithAuthorizationCode(\n    request: TokenWithAuthorizationCodeRequest,\n  ): Promise<TokenResponse> {\n    return this.getToken(request)\n  }\n\n  getTokenWithRefreshToken(\n    request: TokenWithRefreshTokenRequest,\n  ): Promise<TokenResponse> {\n    return this.getToken(request)\n  }\n\n  getTokenWithDeviceCode(\n    request: TokenWithDeviceCodeRequest,\n  ): Promise<TokenResponse> {\n    return this.getToken(request)\n  }\n\n  getTokenWithPassword(\n    request: TokenWithPasswordRequest,\n  ): Promise<TokenResponse> {\n    return this.getToken(request)\n  }\n\n  getTokenWithSAML(request: TokenWithSAMLRequest): Promise<TokenResponse> {\n    return this.getToken(request)\n  }\n\n  getTokenWithClientCredentials(\n    request: TokenWithClientCredentialsRequest,\n  ): Promise<TokenResponse> {\n    return this.getToken(request)\n  }\n\n  private _buildUrl(request: BaseRequest): string {\n    const {url, ...searchParams} = request\n\n    const urlObject = new URL(url)\n\n    const params = new URLSearchParams()\n\n    for (const [k, v] of Object.entries(searchParams)) {\n      if (k != null && v != null) {\n        params.append(k, v)\n      }\n    }\n\n    urlObject.search = params.toString()\n    return urlObject.toString()\n  }\n\n  private _buildRequest(\n    request: BaseRequest,\n    options: {method: 'GET' | 'POST'; headers?: HeadersInit},\n  ): [RequestInfo, RequestInit] {\n    const {url, client_id, client_secret, client_auth_method, ...rest} = request\n    const {headers: headersInit, method} = options\n\n    const headers = new Headers(this.options.headers ?? [])\n\n    new Headers(headersInit ?? []).forEach((value, key) => {\n      headers.set(key, value)\n    })\n\n    if (options.method === 'POST') {\n      headers.set('Content-Type', 'application/x-www-form-urlencoded')\n    }\n\n    const body: Record<string, any> = {\n      client_id,\n      ...rest,\n    }\n\n    switch (client_auth_method) {\n      case 'client_secret_basic':\n        // throw new Error('only client_secret_post supported')\n        if (client_secret == null) {\n          throw new Error('Client secret not present!')\n        }\n\n        headers.set(\n          'Authorization',\n          `Basic ${toBase64(`${client_id}:${client_secret}`)}`,\n        )\n\n        break\n      case 'client_secret_post':\n        if (client_secret == null) {\n          throw new Error('Client secret not present!')\n        }\n\n        body.client_secret = client_secret\n\n        break\n      case 'none':\n      case undefined:\n      case null:\n        break\n      default:\n        throw new Error('Bad client_auth_method')\n    }\n\n    return [\n      url,\n      {\n        method,\n        headers,\n        body:\n          method === 'POST'\n            ? new URLSearchParams(Object.entries(body))\n            : undefined,\n      },\n    ]\n  }\n\n  private _validateResponse(response: any) {\n    if (response.error) {\n      throw Api.Error.fromResponse(response)\n    }\n\n    return response\n  }\n\n  private async _fetchJSON(\n    input: RequestInfo,\n    init: RequestInit,\n  ): Promise<any> {\n    if (init.headers) {\n      const headers = new Headers(init.headers)\n      headers.set('Accept', 'application/json')\n      init.headers = headers\n    } else {\n      init.headers = {Accept: 'application/json'}\n    }\n\n    const response = await window?.fetch(input, init)\n\n    const json = await response.json()\n    this._validateResponse(json)\n\n    if (!response.ok) {\n      throw new Error(\n        `${response.status} ${response.statusText}: ${JSON.stringify(json)}`,\n      )\n    }\n\n    return json\n  }\n}\n","import {AuthorizeRequest, LogoutRequest} from './api'\nimport type Client from './Client'\nimport {Authorization, AuthorizationOptions} from './types'\nimport * as util from './util'\n\nclass ClientStore {\n  constructor(public client: Client) {}\n\n  private async get<T>(\n    key: string,\n    {mustExist = false, deleteAfter = false} = {},\n  ): Promise<T | undefined> {\n    const entry = await this.client.getStore().get(key)\n    if (entry == null) {\n      if (mustExist) {\n        throw new Error(`${key} does not exist in store`)\n      }\n      return\n    }\n\n    const {value, expiresAt} = entry\n    if (expiresAt !== 0 && expiresAt < Date.now()) {\n      await this.client.getStore().delete(key)\n      if (mustExist) {\n        throw new Error(`${key} does not exist in store`)\n      }\n      return\n    }\n\n    if (deleteAfter) {\n      await this.client.getStore().delete(key)\n    }\n\n    return value\n  }\n\n  private async set<T>(key: string, value: any, timeout = 0) {\n    await this.client.getStore().set(key, {\n      expiresAt: timeout === 0 ? 0 : Date.now() + timeout,\n      value,\n    })\n  }\n\n  async setAuthorizeRequest(request: AuthorizeRequest): Promise<void> {\n    await this.set('request', request, 300_000 /* 5 minutes */)\n  }\n  getAuthorizeRequest(): Promise<AuthorizeRequest> {\n    return this.get<AuthorizeRequest>('request', {\n      mustExist: true,\n      deleteAfter: true,\n    }) as Promise<AuthorizeRequest>\n  }\n\n  async setLogoutRequest(request: LogoutRequest): Promise<void> {\n    await this.set('logout-request', request, 300_000 /* 5 minutes */)\n  }\n  getLogoutRequest(): Promise<LogoutRequest> {\n    return this.get<LogoutRequest>('logout-request', {\n      mustExist: true,\n      deleteAfter: true,\n    }) as Promise<LogoutRequest>\n  }\n\n  async setVerifier(challenge: string, verifier: string): Promise<void> {\n    await this.set(`verifier:${challenge}`, verifier, 300_000 /* 5 minutes */)\n  }\n  getVerifier(challenge: string): Promise<string> {\n    return this.get(`verifier:${challenge}`, {\n      mustExist: true,\n      deleteAfter: true,\n    }) as Promise<string>\n  }\n\n  async setOpenIdConfiguration(\n    username: string,\n    openidConfiguration: any,\n    timeout: number,\n  ): Promise<void> {\n    await this.set(\n      `openidConfiguration:${username}`,\n      openidConfiguration,\n      timeout,\n    )\n  }\n  getOpenIdConfiguration(username: string): Promise<any> {\n    return this.get(`openidConfiguration:${username}`)\n  }\n\n  async setAuthorization(authorization: Authorization): Promise<void> {\n    const authorizationOptions: AuthorizationOptions = {\n      clientID: authorization.idToken.aud,\n      resource: authorization.resource,\n      scope: authorization.scope,\n      username: authorization.idToken.sub,\n    }\n\n    const expiresIn = authorization.expiresAt - Date.now()\n\n    if (this.client.cacheOptions.setDefaultUsername) {\n      await this.client.cacheOptions.setDefaultUsername(\n        authorization.idToken.sub,\n      )\n    }\n\n    await this.set('username', authorizationOptions.username, expiresIn)\n    await this.set(\n      await this._getAuthorizationKey(authorizationOptions),\n      authorization,\n      expiresIn,\n    )\n  }\n  async deleteAuthorization(options: AuthorizationOptions): Promise<boolean> {\n    const fallbackUsername = await this.get<string>('username')\n\n    options.username = await this._getUsername(\n      options.username,\n      fallbackUsername,\n    )\n\n    if (options.username === fallbackUsername) {\n      await this.client.getStore().delete('username')\n    }\n\n    return this.client\n      .getStore()\n      .delete(await this._getAuthorizationKey(options))\n  }\n  async getAuthorization(\n    options: AuthorizationOptions,\n  ): Promise<Authorization> {\n    return this.get(await this._getAuthorizationKey(options), {\n      mustExist: true,\n    }) as Promise<Authorization>\n  }\n\n  private async _getAuthorizationKey(\n    options: AuthorizationOptions,\n  ): Promise<string> {\n    return `authorization?${util.objectToKey({\n      username: await this._getUsername(\n        options.username,\n        await this.get('username'),\n      ),\n      clientID: options.clientID ?? this.client.fallbackLoginOptions.clientID,\n      scope: util.getSortedScope(\n        options.scope ?? this.client.fallbackLoginOptions.scope,\n      ),\n      resource: options.resource ?? this.client.fallbackLoginOptions.resource,\n    })}`\n  }\n\n  private async _getUsername(username?: string, fallbackUsername?: string) {\n    if (username == null && fallbackUsername == null) {\n      throw new Error('no username given')\n    }\n\n    return username ?? fallbackUsername\n  }\n}\n\nexport default ClientStore\n","import {Store} from './types'\n\nexport default class StorageStore implements Store {\n  constructor(public storage: Storage) {}\n\n  get(key: string): string | null {\n    const value = this.storage.getItem(key)\n\n    if (value != null) {\n      return JSON.parse(value)\n    }\n\n    return null\n  }\n\n  delete(key: string): boolean {\n    this.storage.removeItem(key)\n    return true\n  }\n\n  set(key: string, value): this {\n    this.storage.setItem(key, JSON.stringify(value))\n    return this\n  }\n}\n","import AbstractUI from '@uauth/abstract-ui'\nimport {\n  DefaultIPFSResolver,\n  DefaultIssuerResolver,\n  DefaultWebFingerResolver,\n  DomainResolver,\n  IssuerResolver,\n} from '@uauth/common'\nimport DomUI from '@uauth/dom-ui'\nimport {\n  Resolution,\n  ResolutionError,\n  ResolutionErrorCode,\n} from '@unstoppabledomains/resolution'\nimport {\n  Api,\n  AuthorizeRequest,\n  AuthorizeResponse,\n  LogoutRequest,\n  LogoutResponse,\n  PopupConfig,\n  TokenResponse,\n  TokenWithAuthorizationCodeRequest,\n  UserInfoRequest,\n} from './api'\nimport ClientStore from './ClientStore'\nimport {StorageStore, Store, StoreType} from './store'\nimport {\n  Authorization,\n  AuthorizationOptions,\n  BaseLoginOptions,\n  BaseLogoutOptions,\n  CacheOptions,\n  ClientOptions,\n  FullLoginOptions,\n  LoginCallbackOptions,\n  LoginCallbackResponse,\n  LoginOptions,\n  LogoutCallbackOptions,\n  LogoutOptions,\n  UserInfo,\n  UserOptions,\n} from './types'\nimport * as util from './util'\n\nexport default class Client {\n  util = util\n  private _clientStore = new ClientStore(this)\n  api: Api\n  fallbackIssuer: string\n  fallbackLoginOptions: BaseLoginOptions\n  fallbackLogoutOptions: BaseLogoutOptions\n  cacheOptions: CacheOptions\n  issuerResolver: IssuerResolver\n  resolution: DomainResolver\n  ui: AbstractUI<AuthorizeRequest>\n\n  store?: Store\n  storeOptions: {\n    store?: Store\n    storeType: StoreType\n  }\n\n  getStore(): Store {\n    if (this.store) {\n      return this.store\n    }\n\n    if (this.storeOptions.store) {\n      this.store = this.storeOptions.store\n    } else {\n      const storeType = this.storeOptions.storeType\n      switch (storeType) {\n        case 'localstore':\n          this.store = new StorageStore(window.localStorage)\n          break\n        case 'sessionstore':\n          this.store = new StorageStore(window.sessionStorage)\n          break\n        case 'memory':\n          this.store = new Map<string, string>()\n          break\n        default:\n          throw new Error('Bad storeType provided')\n      }\n    }\n\n    return this.store\n  }\n\n  constructor(options: ClientOptions) {\n    this.fallbackIssuer =\n      options.fallbackIssuer ?? 'https://auth.unstoppabledomains.com'\n    this.resolution = options.resolution ?? new Resolution()\n\n    if (options.ui) {\n      this.ui = options.ui\n    } else {\n      if (options.uiOptions) {\n        this.ui = new DomUI(options.uiOptions)\n      } else {\n        this.ui = new DomUI()\n      }\n    }\n\n    this.storeOptions = {\n      store: options.store,\n      storeType: options.storeType ?? 'localstore',\n    }\n\n    this.cacheOptions = {\n      issuer: false,\n      userinfo: true,\n      getDefaultUsername: () =>\n        window.localStorage.getItem('uauth-default-username') ?? '',\n      ...(options.cacheOptions ?? {}),\n    }\n\n    if (\n      !options.cacheOptions?.getDefaultUsername &&\n      !options.cacheOptions?.setDefaultUsername\n    ) {\n      this.cacheOptions.setDefaultUsername = (username: string) => {\n        window.localStorage.setItem('uauth-default-username', username)\n      }\n    }\n\n    this.api = new Api({\n      headers: {},\n    })\n\n    this.fallbackLoginOptions = {\n      clientID: options.clientID,\n      clientSecret: options.clientSecret,\n      clientAuthMethod:\n        options.clientAuthMethod ??\n        (options.clientSecret ? 'client_secret_post' : 'none'),\n      maxAge: options.maxAge ?? 300000,\n      prompt: options.prompt ?? 'login',\n      resource: options.resource,\n      redirectUri: options.redirectUri,\n      responseMode: options.responseMode ?? 'fragment',\n      scope: options.scope ?? 'openid wallet',\n    }\n\n    this.fallbackLogoutOptions = {\n      rpInitiatedLogout:\n        options.rpInitiatedLogout ??\n        typeof options.postLogoutRedirectUri === 'string',\n      postLogoutRedirectUri: options.postLogoutRedirectUri,\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    this.issuerResolver = new DefaultIssuerResolver({\n      webfingerResolver: new DefaultWebFingerResolver({\n        ipfsResolver: new DefaultIPFSResolver((...args) =>\n          (options.createIpfsUrl || DefaultIPFSResolver.defaultCreateUrl)(\n            ...args,\n          ),\n        ),\n        domainResolver: {\n          async records(\n            domain: string,\n            keys: string[],\n          ): Promise<Record<string, string>> {\n            try {\n              const records = await self.resolution.records(domain, keys)\n              return records\n            } catch (error) {\n              if (\n                error instanceof ResolutionError &&\n                error.code === ResolutionErrorCode.UnspecifiedResolver\n              ) {\n                return {}\n              }\n              throw error\n            }\n          },\n        },\n      }),\n    })\n  }\n\n  private _createAuthorizeRequestBuilder(\n    options: Partial<LoginOptions>,\n  ): (username: string) => Promise<AuthorizeRequest> {\n    // TODO: Ensure nothing is missing\n    const loginOptions: FullLoginOptions = {\n      ...this.fallbackLoginOptions,\n      ...options,\n    } as FullLoginOptions\n\n    const builder = async (username: string): Promise<AuthorizeRequest> => {\n      await new Promise(r => setTimeout(r, 2000))\n      const openidConfiguration = await this.getOpenIdConfiguration(username)\n\n      const {verifier, challenge} =\n        await util.crypto.createCodeChallengeAndVerifier(43, 'S256')\n\n      const nonce = util.encoding.toBase64(\n        util.encoding.stringFromBuffer(util.crypto.getRandomBytes(32)),\n\n        /* util.encoding.textDecoder.decode */\n      )\n\n      const state = util.encoding.encodeState(loginOptions.state)\n\n      const request: AuthorizeRequest = {\n        // Generated options\n        url: openidConfiguration.authorization_endpoint,\n        code_challenge: challenge,\n        nonce,\n        state,\n\n        // Parameterized options\n        client_id: loginOptions.clientID,\n        client_secret: loginOptions.clientSecret,\n        client_auth_method: loginOptions.clientAuthMethod,\n        login_hint: username,\n        max_age: loginOptions.maxAge,\n        prompt: loginOptions.prompt,\n        resource: loginOptions.resource,\n        redirect_uri: loginOptions.redirectUri,\n        response_mode: loginOptions.responseMode,\n        scope: loginOptions.scope,\n\n        // Constant options\n        code_challenge_method: 'S256',\n        response_type: 'code',\n      }\n\n      await this._clientStore.setAuthorizeRequest(request)\n      await this._clientStore.setVerifier(challenge, verifier)\n\n      return request\n    }\n\n    return builder\n  }\n\n  async buildAuthorizeRequest(\n    options: Partial<LoginOptions>,\n  ): Promise<AuthorizeRequest> {\n    const builder = this._createAuthorizeRequestBuilder(options)\n\n    if (options.username) {\n      return builder(options.username)\n    }\n\n    return this.ui.open({\n      closeOnFinish: false,\n      defaultValue: await this.cacheOptions.getDefaultUsername(),\n      submit: builder,\n    })\n  }\n\n  async loginWithPopup(\n    options: Partial<Omit<LoginOptions, 'responseMode'>> = {},\n    config?: PopupConfig,\n  ): Promise<Authorization> {\n    try {\n      ;(options as Partial<LoginOptions>).responseMode = 'fragment'\n      const request = await this.buildAuthorizeRequest(options)\n      const response = await this.api.authorizeWithPopup(request, config)\n      const authorization = await this.verifyAuthorizeResponse(\n        request,\n        response,\n      )\n\n      return authorization\n    } finally {\n      this.ui.close()\n    }\n  }\n\n  async login(options: Partial<LoginOptions> = {}): Promise<void> {\n    const request: AuthorizeRequest = await this.buildAuthorizeRequest(options)\n\n    const url = this.api.buildAuthorizeUrl(request)\n\n    if (typeof options.beforeRedirect === 'function') {\n      await options.beforeRedirect(url)\n    }\n\n    window.location.href = url\n  }\n\n  async loginCallback<T>(\n    options?: Partial<LoginCallbackOptions>,\n  ): Promise<LoginCallbackResponse<T>> {\n    const url = options?.url ?? window.location.href\n\n    const request: AuthorizeRequest =\n      await this._clientStore.getAuthorizeRequest()\n\n    let response: AuthorizeResponse\n    if (request.response_mode === 'fragment') {\n      response = this.api.parseAuthorizeResponseFromFragment(url)\n    } else if (request.response_mode === 'query') {\n      response = this.api.parseAuthorizeResponseFromQuery(url)\n    } else {\n      throw new Error('Unsupported response_mode')\n    }\n\n    return {\n      authorization: await this.verifyAuthorizeResponse(request, response),\n      state: util.encoding.decodeState<T>(request.state),\n    }\n  }\n\n  async verifyAuthorizeResponse(\n    request: AuthorizeRequest,\n    response: AuthorizeResponse,\n  ): Promise<Authorization> {\n    if (request.state !== response.state) {\n      throw new Error(\"states don't match\")\n    }\n\n    const openidConfiguration = await this.getOpenIdConfiguration(\n      request.login_hint,\n    )\n\n    const tokenRequest: TokenWithAuthorizationCodeRequest = {\n      url: openidConfiguration.token_endpoint,\n      client_id: request.client_id,\n      client_secret: request.client_secret,\n      client_auth_method: request.client_auth_method,\n      grant_type: 'authorization_code',\n      code: response.code,\n      code_verifier: await this._clientStore.getVerifier(\n        request.code_challenge,\n      ),\n      redirect_uri: request.redirect_uri,\n    }\n\n    const tokenResponse: TokenResponse =\n      await this.api.getTokenWithAuthorizationCode(tokenRequest)\n\n    const idToken = await util.crypto.verifyIdToken(\n      openidConfiguration.jwks_uri,\n      tokenResponse.id_token!,\n      request.nonce,\n      request.client_id,\n    )\n\n    const authorization: Authorization = {\n      accessToken: tokenResponse.access_token,\n      // TODO: The server isn't returning the scope along with the callback and\n      // I havn't found the oidc docs to figure out if this is a bug.\n      expiresAt: Date.now() + tokenResponse.expires_in * 1000,\n      idToken,\n      scope: util.getSortedScope(request.scope),\n      resource: request.resource,\n    }\n\n    await this._clientStore.setAuthorization(authorization)\n\n    return authorization\n  }\n\n  async getOpenIdConfiguration(username: string): Promise<any> {\n    if (this.cacheOptions.issuer) {\n      const openidConfiguration =\n        await this._clientStore.getOpenIdConfiguration(username)\n      if (openidConfiguration) {\n        return openidConfiguration\n      }\n    }\n\n    const openidConfiguration = await this.issuerResolver.resolve(\n      username,\n      this.fallbackIssuer,\n    )\n\n    await this._clientStore.setOpenIdConfiguration(\n      username,\n      openidConfiguration,\n      typeof this.cacheOptions.issuer === 'number'\n        ? this.cacheOptions.issuer\n        : 3600_000,\n    )\n\n    return openidConfiguration\n  }\n\n  async authorization(\n    options: AuthorizationOptions = {},\n  ): Promise<Authorization> {\n    return this._clientStore.getAuthorization(options)\n  }\n\n  async user(options: UserOptions = {}): Promise<UserInfo> {\n    const claims = options.claims ?? [\n      'name',\n      'given_name',\n      'family_name',\n      'middle_name',\n      'nickname',\n      'preferred_username',\n      'profile',\n      'picture',\n      'website',\n      'email',\n      'email_verified',\n      'gender',\n      'birthdate',\n      'zoneinfo',\n      'locale',\n      'phone_number',\n      'phone_number_verified',\n      'address',\n      'updated_at',\n      'wallet_address',\n      'wallet_type_hint',\n      'eip4361_message',\n      'eip4361_signature',\n    ]\n\n    const authorization = await this.authorization(options)\n\n    const userinfo: UserInfo = {\n      sub: authorization.idToken.sub,\n    }\n\n    // If we should only read from cache.\n    if (this.cacheOptions.userinfo) {\n      for (const claim of claims) {\n        if (authorization.idToken[claim]) {\n          userinfo[claim] = authorization.idToken[claim]\n        }\n      }\n\n      return userinfo\n    }\n\n    const openidConfiguration = await this.getOpenIdConfiguration(\n      authorization.idToken.sub,\n    )\n\n    const request: UserInfoRequest = {\n      client_id: this.fallbackLoginOptions.clientID,\n      client_secret: this.fallbackLoginOptions.clientSecret,\n      client_auth_method: this.fallbackLoginOptions.clientAuthMethod,\n      access_token: authorization.accessToken,\n      url: openidConfiguration.userinfo_endpoint,\n    }\n\n    const response = await this.api.userinfo(request)\n\n    for (const claim of claims) {\n      if (response[claim]) {\n        userinfo[claim] = response[claim]\n      }\n    }\n\n    return userinfo\n  }\n\n  async buildLogoutRequest(options: LogoutOptions): Promise<LogoutRequest> {\n    const authorization = await this.authorization(options)\n\n    const openidConfiguration = await this.getOpenIdConfiguration(\n      authorization.idToken.sub,\n    )\n\n    if (openidConfiguration.end_session_endpoint == null) {\n      throw new Error('end_session_endpoint must exist')\n    }\n\n    const postLogoutRedirectUri =\n      options.postLogoutRedirectUri ??\n      this.fallbackLogoutOptions.postLogoutRedirectUri\n\n    if (postLogoutRedirectUri == null) {\n      throw new Error('postLogoutRedirectUri must be supplied')\n    }\n\n    const request: LogoutRequest = {\n      client_id: this.fallbackLoginOptions.clientID,\n      client_secret: this.fallbackLoginOptions.clientSecret,\n      client_auth_method: this.fallbackLoginOptions.clientAuthMethod,\n      url: openidConfiguration.end_session_endpoint,\n      id_token_hint: authorization.idToken.__raw,\n      post_logout_redirect_uri: postLogoutRedirectUri,\n      state: util.encoding.encodeState(options.state),\n    }\n\n    await this._clientStore.setLogoutRequest(request)\n\n    return request\n  }\n\n  async logout({\n    clientID,\n    username,\n    scope,\n    resource,\n    ...options\n  }: Partial<LogoutOptions> = {}): Promise<void> {\n    const logoutOptions: LogoutOptions = {\n      ...this.fallbackLogoutOptions,\n      ...options,\n    }\n\n    const authorizationOptions = {clientID, username, scope, resource}\n\n    if (!logoutOptions.rpInitiatedLogout) {\n      await this._clientStore.deleteAuthorization(authorizationOptions)\n      return\n    }\n\n    const request = await this.buildLogoutRequest(logoutOptions)\n\n    const url = this.api.buildLogoutUrl(request)\n\n    if (typeof logoutOptions.beforeRedirect === 'function') {\n      await logoutOptions.beforeRedirect(url)\n    }\n\n    await this._clientStore.deleteAuthorization(authorizationOptions)\n\n    window.location.href = url\n  }\n\n  async logoutCallback<T>(options: LogoutCallbackOptions = {}): Promise<T> {\n    const url = options?.url ?? window.location.href\n\n    const request: LogoutRequest = await this._clientStore.getLogoutRequest()\n\n    const response: AuthorizeResponse =\n      this.api.parseAuthorizeResponseFromQuery(url)\n\n    await this.verifyLogoutResponse(request, response)\n\n    return util.encoding.decodeState<T>(request.state)\n  }\n\n  async verifyLogoutResponse(\n    request: LogoutRequest,\n    response: LogoutResponse,\n  ): Promise<void> {\n    if (request.state !== response.state) {\n      throw new Error(\"states don't match\")\n    }\n  }\n}\n"],"names":["createError","name","message","_Error","_class2","_this","this","_inheritsLoose","Error","PopupTimeoutError","PopupClosedError","stringFromBuffer","buf","String","fromCharCode","apply","Array","from","Uint8Array","textEncoder","TextEncoder","getWindow","window","toBase64","str","btoa","toUrlEncodedBase64","replace","getCrypto","crypto","_getWindow$crypto","msCrypto","getRandomBytes","length","getRandomValues","getCryptoSubtle","subtle","_getCrypto$subtle","webkitSubtle","sha256","digestOp","digest","Promise","resolve","res","rej","oncomplete","e","target","result","onerror","error","onabort","reject","pkceMask","fromBase64","atob","textDecoder","TextDecoder","uniqueElementsFromArray","arr","Set","getSortedScope","scope","trim","split","sort","join","objectFromURLSearchParams","params","obj","forEach","_","key","getAll","get","objectToKey","object","URLSearchParams","Object","entries","filter","_ref","toString","createCodeChallengeAndVerifier","method","verifier","map","v","createCodeVerifier","challenge","encode","buffer","then","_sha","verifyIdToken","jwks_uri","id_token","nonce","client_id","jwtVerify","createRemoteJWKSet","URL","audience","payload","idToken","__raw","encoding","decodeState","state","_state$split","slice","JSON","parse","decodeURIComponent","undefined","encodeState","encodeURIComponent","stringify","objectFromEntries","_step","_iterator","done","_step$value","value","retry","fn","retries","timeout","factor","err","r","setTimeout","ApiError","code","description","uri","fromResponse","response","error_description","error_uri","_excluded","_excluded2","Api","options","buildAuthorizeUrl","request","_buildUrl","buildLogoutUrl","parseAuthorizeResponseFromFragment","url","_validateResponse","hash","substring","parseAuthorizeResponseFromQuery","searchParams","authorizeWithPopup","config","_config$timeout","_this2","popup","location","href","open","screenX","innerWidth","screenY","innerHeight","recievedMessage","timeoutId","clearInterval","intervalId","close","setInterval","_popup","redirectUrl","closed","clearTimeout","redirect_uri","authorizeWithDevice","getToken","_buildRequest","_fetchJSON","_this4$_buildRequest","introspect","_this$_buildRequest","init","revoke","_this6$_buildRequest","userinfo","_this$_buildRequest2","headers","Authorization","access_token","jwks","_this$_buildRequest3","getTokenWithAuthorizationCode","getTokenWithRefreshToken","getTokenWithDeviceCode","getTokenWithPassword","getTokenWithSAML","getTokenWithClientCredentials","urlObject","_i","_Object$entries","k","_Object$entries$_i","append","search","_this$options$headers","client_secret","client_auth_method","rest","_objectWithoutPropertiesLoose","headersInit","Headers","set","body","input","_window","_this8","Accept","fetch","json","ok","status","statusText","ClientStore","client","mustExist","_ref$mustExist","deleteAfter","_ref$deleteAfter","getStore","entry","_temp","expiresAt","Date","now","_exit","_temp2","_temp3","setAuthorizeRequest","getAuthorizeRequest","setLogoutRequest","getLogoutRequest","setVerifier","getVerifier","setOpenIdConfiguration","username","openidConfiguration","getOpenIdConfiguration","setAuthorization","authorization","_temp7","_this14","authorizationOptions","expiresIn","_set","_getAuthorizationKey","clientID","aud","resource","sub","_temp8","cacheOptions","setDefaultUsername","deleteAuthorization","_this16","fallbackUsername","_getUsername","_this15$_getUsername","_temp10","_this15$client$getSto","_this15$_getAuthoriza","_delete","call","_temp9","getAuthorization","_get2","_this18","_this17$_getAuthoriza","_objectToKey2","util","_this20","_this19$get","_getUsername3","_options$username2","_this19$_getUsername","_options$clientID","_options$scope","_options$resource","fallbackLoginOptions","StorageStore","storage","getItem","_proto","removeItem","setItem","_options$fallbackIssu","_options$resolution","_options$storeType","_options$cacheOptions","_options$cacheOptions2","_options$cacheOptions3","_options$clientAuthMe","_options$maxAge","_options$prompt","_options$responseMode","_options$rpInitiatedL","_clientStore","api","fallbackIssuer","fallbackLogoutOptions","issuerResolver","resolution","ui","store","storeOptions","Resolution","uiOptions","DomUI","storeType","issuer","getDefaultUsername","_window$localStorage$","localStorage","clientSecret","clientAuthMethod","maxAge","prompt","redirectUri","responseMode","rpInitiatedLogout","postLogoutRedirectUri","self","DefaultIssuerResolver","webfingerResolver","DefaultWebFingerResolver","ipfsResolver","DefaultIPFSResolver","createIpfsUrl","defaultCreateUrl","arguments","domainResolver","records","domain","keys","_catch","ResolutionError","ResolutionErrorCode","UnspecifiedResolver","sessionStorage","Map","_createAuthorizeRequestBuilder","loginOptions","_extends","authorization_endpoint","code_challenge","login_hint","max_age","response_mode","code_challenge_method","response_type","buildAuthorizeRequest","_this3","builder","_open2","_this2$ui2","_this2$cacheOptions$g","closeOnFinish","defaultValue","submit","loginWithPopup","_this5","verifyAuthorizeResponse","_finallyRethrows","_wasThrown","_result","login","_this7","beforeRedirect","loginCallback","_options$url","_this9","_this8$verifyAuthoriz","_this11","token_endpoint","_this10$_clientStore$","_openidConfiguration$","_request$client_id","_request$client_secre","_request$client_auth_","grant_type","_response$code","code_verifier","tokenResponse","accessToken","expires_in","_exit2","_temp5","_result2","_this13","_temp6","user","_options$claims","_this17","claims","claim","userinfo_endpoint","_step2","_iterator2","buildLogoutRequest","_this19","_options$postLogoutRe","end_session_endpoint","id_token_hint","post_logout_redirect_uri","logout","_temp11","_ref2","_exit4","_temp12","_result3","_this21","logoutOptions","_temp13","logoutCallback","_options$url2","_options","_this23","verifyLogoutResponse"],"mappings":"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"}